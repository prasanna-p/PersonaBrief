name: 'Build and Deploy to GKE'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment (e.g., dev, prod)'
        required: true
        default: 'dev'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WIF_PROVIDER }}
  GAR_LOCATION: ${{ secrets.LOCATION }}
  REPOSITORY: ${{ secrets.REPO_NAME }}
  IMAGE: ${{ secrets.IMAGE }}
  GCLOUD_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
  ZONE_ID: ${{ secrets.ZONE_ID }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
  API_KEY: ${{ secrets.API_KEY }}

jobs:
  setup-build-publish-deploy:
    name: 'Setup, Build, Publish, and Deploy'
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: read
      id-token: write

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      - name: 'Create .env File Securely'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          echo ".env file created"

      - name: 'Load Environment Variables'
        run: |
          set -a  # Automatically export variables
          export $(grep -v '^#' .env | xargs)
          set +a
          echo "Environment Variables Loaded"

      - name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ env.GCP_SERVICE_ACCOUNT }}'

      - name: 'Authenticate Docker to Artifact Registry'
        run: |
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: 'Set up GKE credentials'
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: '${{ env.CLUSTER_NAME }}'
          location: '${{ env.ZONE_ID }}'

      - name: 'Build and Push Docker Image'
        run: |
          DOCKER_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}"
          
          docker build --tag "$DOCKER_TAG" ./app
          
          docker push "$DOCKER_TAG"

      - name: 'Prepare Helm Values'
        run: |
          export REPO_NAME="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}"
          export TAG="${{ github.sha }}"
          envsubst < ./k8s/values.template.yaml > ./k8s/app_chart/values.yaml
          cat ./k8s/app_chart/values.yaml

          
      - name: 'Setup Namespace'
        run: |
          kubectl config set-context --current --namespace "$NAMESPACE"
          helm list
          

      - name: 'Deploy with Helm'
        run: |
          helm upgrade --install persona-brief ./k8s/app_chart \
          --values ./k8s/app_chart/values.yaml --namespace "$NAMESPACE"
